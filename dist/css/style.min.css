html{box-sizing:border-box;scroll-behavior:smooth}*,:after,:before{box-sizing:inherit;margin:0;padding:0}body{background-color:#fff;height:200vh}.wrapper{margin:0 auto;width:100%;max-width:1200px}.section-padding{padding:2rem}.section-title{padding-bottom:2rem}@media (min-width:768px){.section-padding{padding:3rem}.section-title{padding-bottom:3rem}}@media (min-width:992px){.section-padding{padding:4rem}.section-title{padding-bottom:4rem}}html{font-size:62.5%}body{font-family:Raleway,sans-serif;font-size:1.6rem}.nav-link{color:#000;font-size:2rem;text-decoration:none}.nav-mobile .logo{font-size:2.8rem}.nav-desktop .logo{font-size:3.8rem}.section-title{font-size:2.8rem;font-weight:400;text-transform:uppercase}.about-us{color:#000}.about-us__text{text-align:justify;line-height:1.4em}.raleway{font-family:Raleway,sans-serif;font-optical-sizing:auto;font-weight:weight;font-style:normal}.header__separator{height:6rem}.header__hero{position:relative;display:grid;grid-template-rows:repeat(3,1fr);background-image:url(/dist/img/jungle_small.jpg);background-position:center 70%;background-size:cover;height:40vh;color:#fff;z-index:-5}.header__hero--shadow{position:absolute;left:0;top:0;width:100%;height:100%;background-color:rgba(0,0,0,.6);z-index:-1}.header__hero__text{grid-row:2/3;align-self:center}@media (min-width:768px){.header__hero{background-image:url(/dist/img/jungle_large.jpg)}}@media (min-width:992px){.header__separator{height:9.2rem}.header__hero{background-image:url(/dist/img/jungle_xlarge.jpg);height:50vh}.header__hero__text{align-self:center}.header__hero__title{font-size:2.2rem}.header__hero__caption{font-size:3.8rem}}.nav-mobile{position:fixed;width:100%;height:100%;top:calc(-100% + 6rem);background-color:#fff;transition:top .3s}.nav-mobile__items{position:relative;display:flex;flex-direction:column;justify-content:space-around;align-items:center;top:45%;transform:translateY(-50%);height:60%}.nav-mobile__link{padding:1.5em 2em}.nav-mobile .logo{bottom:1rem;left:50%;transform:translateX(-50%)}.nav-mobile .logo-icon-img{height:3rem}.nav-mobile--active{top:0}.nav-desktop{position:fixed;width:100%;display:none;z-index:10;background-color:#fff}.nav-desktop__items{position:relative;display:flex;justify-content:flex-end;align-items:center;height:100%}.nav-desktop__link{position:relative;padding:3.6rem 2.8rem;transition:color .2s}.nav-desktop__link:before{content:"";position:absolute;left:0;top:0;height:100%;width:100%;transform-origin:right;transform:scaleX(0);transition:transform .3s;background-color:#000;z-index:-1}.nav-desktop__link:hover{color:#fff}.nav-desktop__link:hover:before{transform-origin:left;transform:scaleX(1)}.nav-desktop .logo{top:50%;left:0;padding-left:4rem;transform:translateY(-50%)}.nav-link:focus{outline:1px solid #a0a0a0}.logo{position:absolute}.logo-icon-img{height:4rem}.logo,.logo-icon{vertical-align:middle}.nav-desktop__link--active{color:#fff}.nav-desktop__link--active:after{content:"";position:absolute;left:0;top:0;height:100%;width:100%;background-color:#000;z-index:-1}@media (min-width:992px){.burger-btn,.nav-mobile{display:none}.nav-desktop{display:block}}.about-us,.about-us__content{display:flex;flex-direction:column;justify-content:center;align-items:center}.about-us__img{width:100%}.about-us__heading{padding:1em 0}.burger-btn{position:fixed;top:0;right:1rem;padding:1em;background:none;border:1px solid transparent;z-index:100;cursor:pointer}.burger-btn:focus{outline:1px solid #a0a0a0}.burger-btn__box{position:relative;width:40px;height:30px}.burger-btn__bars,.burger-btn__bars:after,.burger-btn__bars:before{position:absolute;left:0;top:14px;width:100%;height:3px;background-color:#000;transition:top .4s,transform .4s}.burger-btn__bars:before{content:"";top:-13px}.burger-btn__bars:after{content:"";top:13px}.burger-btn--animation .burger-btn__bars{transform:rotate(-45deg)}.burger-btn--animation .burger-btn__bars:after,.burger-btn--animation .burger-btn__bars:before{content:"";top:0;transform:rotate(-90deg)}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
